/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vandremurakami.odousys.gui;

import com.vandremurakami.odousys.controle.ControleListaOrcamento;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import javax.swing.JTable;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Vandre
 */
public class panelListarOrcamento extends javax.swing.JPanel {

    private final ControleListaOrcamento controleListaOrcamento;
        
    /**
     * Creates new form painelListarOrcamento
     */
    public panelListarOrcamento() {
        initComponents();
        controleListaOrcamento = new ControleListaOrcamento(this);
    }

    public JTable getTabelaOrcamento() {
        return tableOrcamento; 
    }
    
    public JComboBox getComboBoxDentista() {
        return comboBoxDentista; 
    }
    
    public String getFiltro() {
        return textFieldPaciente.getText().trim();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneTabelaOrcamento = new javax.swing.JScrollPane();
        tableOrcamento = new javax.swing.JTable();
        labelFiltroDentista = new javax.swing.JLabel();
        comboBoxDentista = new javax.swing.JComboBox<>();
        labelAdicionar = new javax.swing.JLabel();
        labelAbrir = new javax.swing.JLabel();
        labelFechar = new javax.swing.JLabel();
        labelLimpar = new javax.swing.JLabel();
        labelFiltroPaciente = new javax.swing.JLabel();
        textFieldPaciente = new javax.swing.JTextField();
        labelLimparFiltroPaciente = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));
        setMaximumSize(new java.awt.Dimension(1260, 630));
        setMinimumSize(new java.awt.Dimension(1260, 630));
        setPreferredSize(new java.awt.Dimension(1260, 630));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrollPaneTabelaOrcamento.setMaximumSize(new java.awt.Dimension(1085, 1000000));
        scrollPaneTabelaOrcamento.setMinimumSize(new java.awt.Dimension(1085, 410));
        scrollPaneTabelaOrcamento.setPreferredSize(new java.awt.Dimension(1085, 410));

        tableOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Dentista", "Paciente", "Valor Total", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOrcamento.setMaximumSize(null);
        tableOrcamento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableOrcamento.getTableHeader().setReorderingAllowed(false);
        tableOrcamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOrcamentoMouseClicked(evt);
            }
        });
        scrollPaneTabelaOrcamento.setViewportView(tableOrcamento);

        add(scrollPaneTabelaOrcamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 1085, 410));

        labelFiltroDentista.setText("Filtrar por Dentista:");
        add(labelFiltroDentista, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        comboBoxDentista.setEditable(true);
        comboBoxDentista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione uma das opções>" }));
        AutoCompleteDecorator.decorate(comboBoxDentista);
        comboBoxDentista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDentistaActionPerformed(evt);
            }
        });
        add(comboBoxDentista, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 35, 250, 25));

        labelAdicionar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAdicionar.setText("Adicionar");
        labelAdicionar.setMaximumSize(new java.awt.Dimension(90, 35));
        labelAdicionar.setMinimumSize(new java.awt.Dimension(90, 35));
        labelAdicionar.setOpaque(true);
        labelAdicionar.setPreferredSize(new java.awt.Dimension(90, 35));
        labelAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAdicionarMouseClicked(evt);
            }
        });
        add(labelAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, -1, -1));

        labelAbrir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAbrir.setText("Abrir");
        labelAbrir.setMaximumSize(new java.awt.Dimension(90, 35));
        labelAbrir.setMinimumSize(new java.awt.Dimension(90, 35));
        labelAbrir.setOpaque(true);
        labelAbrir.setPreferredSize(new java.awt.Dimension(90, 35));
        labelAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAbrirMouseClicked(evt);
            }
        });
        add(labelAbrir, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 570, -1, -1));

        labelFechar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFechar.setText("Fechar");
        labelFechar.setMaximumSize(new java.awt.Dimension(90, 35));
        labelFechar.setMinimumSize(new java.awt.Dimension(90, 35));
        labelFechar.setOpaque(true);
        labelFechar.setPreferredSize(new java.awt.Dimension(90, 35));
        labelFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelFecharMouseClicked(evt);
            }
        });
        add(labelFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 570, -1, -1));

        labelLimpar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLimpar.setText("Limpar");
        labelLimpar.setMaximumSize(new java.awt.Dimension(90, 35));
        labelLimpar.setMinimumSize(new java.awt.Dimension(90, 35));
        labelLimpar.setOpaque(true);
        labelLimpar.setPreferredSize(new java.awt.Dimension(90, 35));
        labelLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelLimparMouseClicked(evt);
            }
        });
        add(labelLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 30, -1, -1));

        labelFiltroPaciente.setText("Filtrar por Paciente:");
        add(labelFiltroPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, -1, -1));

        textFieldPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldPacienteKeyPressed(evt);
            }
        });
        add(textFieldPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 35, 250, 25));

        labelLimparFiltroPaciente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLimparFiltroPaciente.setText("Limpar");
        labelLimparFiltroPaciente.setMaximumSize(new java.awt.Dimension(90, 35));
        labelLimparFiltroPaciente.setMinimumSize(new java.awt.Dimension(90, 35));
        labelLimparFiltroPaciente.setOpaque(true);
        labelLimparFiltroPaciente.setPreferredSize(new java.awt.Dimension(90, 35));
        labelLimparFiltroPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelLimparFiltroPacienteMouseClicked(evt);
            }
        });
        add(labelLimparFiltroPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tableOrcamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOrcamentoMouseClicked
        if (evt.getClickCount() == 2) {
            if(controleListaOrcamento != null)
                controleListaOrcamento.CadastroAbrirOrcamento();
        }
    }//GEN-LAST:event_tableOrcamentoMouseClicked

    private void labelAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAdicionarMouseClicked
        if(controleListaOrcamento != null)
            controleListaOrcamento.CadastroAdicionarOrcamento();
    }//GEN-LAST:event_labelAdicionarMouseClicked

    private void labelAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAbrirMouseClicked
        if(controleListaOrcamento != null)
            controleListaOrcamento.CadastroAbrirOrcamento();
    }//GEN-LAST:event_labelAbrirMouseClicked

    private void labelFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelFecharMouseClicked
        if(controleListaOrcamento != null)
            controleListaOrcamento.FecharListaOrcamento();
    }//GEN-LAST:event_labelFecharMouseClicked

    private void labelLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelLimparMouseClicked
        comboBoxDentista.setSelectedIndex(0);
        if(controleListaOrcamento != null)
            controleListaOrcamento.PreencheTabelaOrcamento();
    }//GEN-LAST:event_labelLimparMouseClicked

    private void labelLimparFiltroPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelLimparFiltroPacienteMouseClicked
        textFieldPaciente.setText("");
        if(controleListaOrcamento != null)
            controleListaOrcamento.PreencheTabelaOrcamento();
    }//GEN-LAST:event_labelLimparFiltroPacienteMouseClicked

    private void textFieldPacienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPacienteKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            if(controleListaOrcamento != null)
                controleListaOrcamento.PreencheTabelaOrcamento();
        }
    }//GEN-LAST:event_textFieldPacienteKeyPressed

    private void comboBoxDentistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDentistaActionPerformed
        if(controleListaOrcamento != null)
            controleListaOrcamento.PreencheTabelaOrcamento();
    }//GEN-LAST:event_comboBoxDentistaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxDentista;
    private javax.swing.JLabel labelAbrir;
    private javax.swing.JLabel labelAdicionar;
    private javax.swing.JLabel labelFechar;
    private javax.swing.JLabel labelFiltroDentista;
    private javax.swing.JLabel labelFiltroPaciente;
    private javax.swing.JLabel labelLimpar;
    private javax.swing.JLabel labelLimparFiltroPaciente;
    private javax.swing.JScrollPane scrollPaneTabelaOrcamento;
    private javax.swing.JTable tableOrcamento;
    private javax.swing.JTextField textFieldPaciente;
    // End of variables declaration//GEN-END:variables
}
